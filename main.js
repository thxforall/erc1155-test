const Web3 = require('web3');
require('dotenv').config();

const provider = new Web3.providers.HttpProvider(process.env.PROVIDER_URL);
const web3 = new Web3(provider);

const account = process.env.ACCOUNT_ADDRESS;
const privateKey = process.env.PRIVATE_KEY;

const contractABI = [
  [
    {
      inputs: [],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'balance',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'needed',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ERC1155InsufficientBalance',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'approver',
          type: 'address',
        },
      ],
      name: 'ERC1155InvalidApprover',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'idsLength',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'valuesLength',
          type: 'uint256',
        },
      ],
      name: 'ERC1155InvalidArrayLength',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'ERC1155InvalidOperator',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'receiver',
          type: 'address',
        },
      ],
      name: 'ERC1155InvalidReceiver',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
      ],
      name: 'ERC1155InvalidSender',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'ERC1155MissingApprovalForAll',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'OwnableInvalidOwner',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'OwnableUnauthorizedAccount',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'ApprovalForAll',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256[]',
          name: 'ids',
          type: 'uint256[]',
        },
        {
          indexed: false,
          internalType: 'uint256[]',
          name: 'values',
          type: 'uint256[]',
        },
      ],
      name: 'TransferBatch',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'value',
          type: 'uint256',
        },
      ],
      name: 'TransferSingle',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'string',
          name: 'value',
          type: 'string',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'URI',
      type: 'event',
    },
    {
      inputs: [],
      name: 'MAX_SUPPLY_TIER1',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'MAX_SUPPLY_TIER2',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'MAX_SUPPLY_TIER3',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'MAX_SUPPLY_TIER4',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'TIER1',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'TIER2',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'TIER3',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'TIER4',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address[]',
          name: 'accounts',
          type: 'address[]',
        },
        {
          internalType: 'uint256[]',
          name: 'ids',
          type: 'uint256[]',
        },
      ],
      name: 'balanceOfBatch',
      outputs: [
        {
          internalType: 'uint256[]',
          name: '',
          type: 'uint256[]',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tier',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'buyTokens',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tier',
          type: 'uint256',
        },
      ],
      name: 'getMaxSupply',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tier',
          type: 'uint256',
        },
      ],
      name: 'getTierPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'icoEndBlock',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'isApprovedForAll',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256[]',
          name: 'ids',
          type: 'uint256[]',
        },
        {
          internalType: 'uint256[]',
          name: 'values',
          type: 'uint256[]',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'safeBatchTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'value',
          type: 'uint256',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'setApprovalForAll',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes4',
          name: 'interfaceId',
          type: 'bytes4',
        },
      ],
      name: 'supportsInterface',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'tier1Price',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'tier2Price',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'tier3Price',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'tier4Price',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'totalSold',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'uri',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
];
/*
const contractBytecode =
  '0x6080604052662386f26fc1000060045566b1a2bc2ec5000060055567016345785d8a00006006556702c68af0bb14000060075534801561003d575f80fd5b5033604051806060016040528060268152602001613256602691396100678161010060201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100d8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100cf9190610215565b60405180910390fd5b6100e78161011360201b60201c565b506032436100f59190610264565b600981905550610597565b806002908161010f91906104c8565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ff826101d6565b9050919050565b61020f816101f5565b82525050565b5f6020820190506102285f830184610206565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61026e8261022e565b91506102798361022e565b925082820190508082111561029157610290610237565b5b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061031257607f821691505b602082108103610325576103246102ce565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261034c565b610391868361034c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6103cc6103c76103c28461022e565b6103a9565b61022e565b9050919050565b5f819050919050565b6103e5836103b2565b6103f96103f1826103d3565b848454610358565b825550505050565b5f90565b61040d610401565b6104188184846103dc565b505050565b5b8181101561043b576104305f82610405565b60018101905061041e565b5050565b601f821115610480576104518161032b565b61045a8461033d565b81016020851015610469578190505b61047d6104758561033d565b83018261041d565b50505b505050565b5f82821c905092915050565b5f6104a05f1984600802610485565b1980831691505092915050565b5f6104b88383610491565b9150826002028217905092915050565b6104d182610297565b67ffffffffffffffff8111156104ea576104e96102a1565b5b6104f482546102fb565b6104ff82828561043f565b5f60209050601f831160018114610530575f841561051e578287015190505b61052885826104ad565b86555061058f565b601f19841661053e8661032b565b5f5b8281101561056557848901518255600182019150602085019450602081019050610540565b86831015610582578489015161057e601f891682610491565b8355505b6001600288020188555050505b505050505050565b612cb2806105a45f395ff3fe6080604052600436106101c0575f3560e01c80636a5a6857116100f6578063cab84db711610094578063f01169a211610063578063f01169a214610634578063f242432a1461065e578063f2fde38b14610686578063fb8b51a0146106ae576101c0565b8063cab84db71461057a578063d8d3b1a4146105a4578063e985e9c5146105ce578063ef035cd51461060a576101c0565b80638da5cb5b116100d05780638da5cb5b146104c257806393b2467e146104ec578063a22cb46514610528578063beee9a3414610550576101c0565b80636a5a685714610466578063715018a6146104905780637975ce28146104a6576101c0565b806340058f61116101635780634a0792151161013d5780634a0792151461039a5780634e1273f4146103c457806359370443146104005780635e495d741461042a576101c0565b806340058f611461031c578063439d8f4e1461034657806347d70f7414610370576101c0565b80630e89341c1161019f5780630e89341c14610266578063252a8875146102a25780632eb2c2d6146102de5780633ccfd60b14610306576101c0565b8062fdd58e146101c457806301ffc9a7146102005780630d65d50b1461023c575b5f80fd5b3480156101cf575f80fd5b506101ea60048036038101906101e59190611e9b565b6106d8565b6040516101f79190611ee8565b60405180910390f35b34801561020b575f80fd5b5061022660048036038101906102219190611f56565b61072d565b6040516102339190611f9b565b60405180910390f35b348015610247575f80fd5b5061025061080e565b60405161025d9190611ee8565b60405180910390f35b348015610271575f80fd5b5061028c60048036038101906102879190611fb4565b610813565b604051610299919061204f565b60405180910390f35b3480156102ad575f80fd5b506102c860048036038101906102c39190611fb4565b6108a5565b6040516102d59190611ee8565b60405180910390f35b3480156102e9575f80fd5b5061030460048036038101906102ff919061225f565b61092e565b005b348015610311575f80fd5b5061031a6109d5565b005b348015610327575f80fd5b50610330610a71565b60405161033d9190611ee8565b60405180910390f35b348015610351575f80fd5b5061035a610a76565b6040516103679190611ee8565b60405180910390f35b34801561037b575f80fd5b50610384610a7c565b6040516103919190611ee8565b60405180910390f35b3480156103a5575f80fd5b506103ae610a82565b6040516103bb9190611ee8565b60405180910390f35b3480156103cf575f80fd5b506103ea60048036038101906103e591906123ea565b610a88565b6040516103f79190612517565b60405180910390f35b34801561040b575f80fd5b50610414610b8f565b6040516104219190611ee8565b60405180910390f35b348015610435575f80fd5b50610450600480360381019061044b9190611fb4565b610b94565b60405161045d9190611ee8565b60405180910390f35b348015610471575f80fd5b5061047a610c1b565b6040516104879190611ee8565b60405180910390f35b34801561049b575f80fd5b506104a4610c21565b005b6104c060048036038101906104bb9190612537565b610c34565b005b3480156104cd575f80fd5b506104d6610e2e565b6040516104e39190612584565b60405180910390f35b3480156104f7575f80fd5b50610512600480360381019061050d9190611fb4565b610e56565b60405161051f9190611ee8565b60405180910390f35b348015610533575f80fd5b5061054e600480360381019061054991906125c7565b610e6b565b005b34801561055b575f80fd5b50610564610e81565b6040516105719190611ee8565b60405180910390f35b348015610585575f80fd5b5061058e610e86565b60405161059b9190611ee8565b60405180910390f35b3480156105af575f80fd5b506105b8610e8b565b6040516105c59190611ee8565b60405180910390f35b3480156105d9575f80fd5b506105f460048036038101906105ef9190612605565b610e90565b6040516106019190611f9b565b60405180910390f35b348015610615575f80fd5b5061061e610f1e565b60405161062b9190611ee8565b60405180910390f35b34801561063f575f80fd5b50610648610f24565b6040516106559190611ee8565b60405180910390f35b348015610669575f80fd5b50610684600480360381019061067f9190612643565b610f2a565b005b348015610691575f80fd5b506106ac60048036038101906106a791906126d6565b610fd1565b005b3480156106b9575f80fd5b506106c2611055565b6040516106cf9190611ee8565b60405180910390f35b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107f757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061080757506108068261105b565b5b9050919050565b600381565b6060600280546108229061272e565b80601f016020809104026020016040519081016040528092919081815260200182805461084e9061272e565b80156108995780601f1061087057610100808354040283529160200191610899565b820191905f5260205f20905b81548152906001019060200180831161087c57829003601f168201915b50505050509050919050565b5f600182036108b8576004549050610929565b600282036108ca576005549050610929565b600382036108dc576006549050610929565b600482036108ee576007549050610929565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610920906127a8565b60405180910390fd5b919050565b5f6109376110c4565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561097c575061097a8682610e90565b155b156109c05780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109b79291906127c6565b60405180910390fd5b6109cd86868686866110cb565b505050505050565b6109dd6111bf565b5f4790505f8111610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a90612837565b60405180910390fd5b610a2b610e2e565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610a6d573d5f803e3d5ffd5b5050565b600281565b60065481565b60095481565b60055481565b60608151835114610ad457815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610acb929190612855565b60405180910390fd5b5f835167ffffffffffffffff811115610af057610aef612073565b5b604051908082528060200260200182016040528015610b1e5781602001602082028036833780820191505090505b5090505f5b8451811015610b8457610b5a610b42828761124690919063ffffffff16565b610b55838761125990919063ffffffff16565b6106d8565b828281518110610b6d57610b6c61287c565b5b602002602001018181525050806001019050610b23565b508091505092915050565b606481565b5f60018203610ba7576103e89050610c16565b60028203610bb9576101f49050610c16565b60038203610bca5760c89050610c16565b60048203610bdb5760649050610c16565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d906127a8565b60405180910390fd5b919050565b6101f481565b610c296111bf565b610c325f61126c565b565b600954431115610c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c70906128f3565b60405180910390fd5b60018210158015610c8b575060048211155b610cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc1906127a8565b60405180910390fd5b5f610cd4836108a5565b90505f8282610ce3919061293e565b905080341015610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f906129c9565b60405180910390fd5b610d3184610b94565b8360085f8781526020019081526020015f2054610d4e91906129e7565b1115610d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8690612a64565b60405180910390fd5b610da933858560405180602001604052805f81525061132f565b8260085f8681526020019081526020015f205f828254610dc991906129e7565b9250508190555080341115610e28573373ffffffffffffffffffffffffffffffffffffffff166108fc8234610dfe9190612a82565b90811502906040515f60405180830381858888f19350505050158015610e26573d5f803e3d5ffd5b505b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6008602052805f5260405f205f915090505481565b610e7d610e766110c4565b83836113c4565b5050565b600481565b60c881565b600181565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60075481565b6103e881565b5f610f336110c4565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610f785750610f768682610e90565b155b15610fbc5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610fb39291906127c6565b60405180910390fd5b610fc9868686868661152d565b505050505050565b610fd96111bf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611049575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110409190612584565b60405180910390fd5b6110528161126c565b50565b60045481565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361113b575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111329190612584565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111ab575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016111a29190612584565b60405180910390fd5b6111b88585858585611633565b5050505050565b6111c76110c4565b73ffffffffffffffffffffffffffffffffffffffff166111e5610e2e565b73ffffffffffffffffffffffffffffffffffffffff1614611244576112086110c4565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161123b9190612584565b60405180910390fd5b565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361139f575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113969190612584565b60405180910390fd5b5f806113ab85856116df565b915091506113bc5f87848487611633565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611434575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161142b9190612584565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115209190611f9b565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361159d575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115949190612584565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361160d575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016116049190612584565b60405180910390fd5b5f8061161985856116df565b9150915061162a8787848487611633565b50505050505050565b61163f8585858561170f565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146116d8575f61167b6110c4565b905060018451036116c7575f61169a5f8661125990919063ffffffff16565b90505f6116b05f8661125990919063ffffffff16565b90506116c0838989858589611a9f565b50506116d6565b6116d5818787878787611c4e565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461175957815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611750929190612855565b60405180910390fd5b5f6117626110c4565b90505f5b835181101561195e575f611783828661125990919063ffffffff16565b90505f611799838661125990919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146118bc575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561186857888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161185f9493929190612ab5565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461195157805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461194991906129e7565b925050819055505b5050806001019050611766565b506001835103611a19575f61197c5f8561125990919063ffffffff16565b90505f6119925f8561125990919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611a0a929190612855565b60405180910390a45050611a98565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611a8f929190612af8565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611c46578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611aff959493929190612b7f565b6020604051808303815f875af1925050508015611b3a57506040513d601f19601f82011682018060405250810190611b379190612beb565b60015b611bbb573d805f8114611b68576040519150601f19603f3d011682016040523d82523d5f602084013e611b6d565b606091505b505f815103611bb357846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611baa9190612584565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611c4457846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611c3b9190612584565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611df5578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611cae959493929190612c16565b6020604051808303815f875af1925050508015611ce957506040513d601f19601f82011682018060405250810190611ce69190612beb565b60015b611d6a573d805f8114611d17576040519150601f19603f3d011682016040523d82523d5f602084013e611d1c565b606091505b505f815103611d6257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611d599190612584565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611df357846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611dea9190612584565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e3782611e0e565b9050919050565b611e4781611e2d565b8114611e51575f80fd5b50565b5f81359050611e6281611e3e565b92915050565b5f819050919050565b611e7a81611e68565b8114611e84575f80fd5b50565b5f81359050611e9581611e71565b92915050565b5f8060408385031215611eb157611eb0611e06565b5b5f611ebe85828601611e54565b9250506020611ecf85828601611e87565b9150509250929050565b611ee281611e68565b82525050565b5f602082019050611efb5f830184611ed9565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f3581611f01565b8114611f3f575f80fd5b50565b5f81359050611f5081611f2c565b92915050565b5f60208284031215611f6b57611f6a611e06565b5b5f611f7884828501611f42565b91505092915050565b5f8115159050919050565b611f9581611f81565b82525050565b5f602082019050611fae5f830184611f8c565b92915050565b5f60208284031215611fc957611fc8611e06565b5b5f611fd684828501611e87565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61202182611fdf565b61202b8185611fe9565b935061203b818560208601611ff9565b61204481612007565b840191505092915050565b5f6020820190508181035f8301526120678184612017565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120a982612007565b810181811067ffffffffffffffff821117156120c8576120c7612073565b5b80604052505050565b5f6120da611dfd565b90506120e682826120a0565b919050565b5f67ffffffffffffffff82111561210557612104612073565b5b602082029050602081019050919050565b5f80fd5b5f61212c612127846120eb565b6120d1565b9050808382526020820190506020840283018581111561214f5761214e612116565b5b835b8181101561217857806121648882611e87565b845260208401935050602081019050612151565b5050509392505050565b5f82601f8301126121965761219561206f565b5b81356121a684826020860161211a565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156121cd576121cc612073565b5b6121d682612007565b9050602081019050919050565b828183375f83830152505050565b5f6122036121fe846121b3565b6120d1565b90508281526020810184848401111561221f5761221e6121af565b5b61222a8482856121e3565b509392505050565b5f82601f8301126122465761224561206f565b5b81356122568482602086016121f1565b91505092915050565b5f805f805f60a0868803121561227857612277611e06565b5b5f61228588828901611e54565b955050602061229688828901611e54565b945050604086013567ffffffffffffffff8111156122b7576122b6611e0a565b5b6122c388828901612182565b935050606086013567ffffffffffffffff8111156122e4576122e3611e0a565b5b6122f088828901612182565b925050608086013567ffffffffffffffff81111561231157612310611e0a565b5b61231d88828901612232565b9150509295509295909350565b5f67ffffffffffffffff82111561234457612343612073565b5b602082029050602081019050919050565b5f6123676123628461232a565b6120d1565b9050808382526020820190506020840283018581111561238a57612389612116565b5b835b818110156123b3578061239f8882611e54565b84526020840193505060208101905061238c565b5050509392505050565b5f82601f8301126123d1576123d061206f565b5b81356123e1848260208601612355565b91505092915050565b5f8060408385031215612400576123ff611e06565b5b5f83013567ffffffffffffffff81111561241d5761241c611e0a565b5b612429858286016123bd565b925050602083013567ffffffffffffffff81111561244a57612449611e0a565b5b61245685828601612182565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61249281611e68565b82525050565b5f6124a38383612489565b60208301905092915050565b5f602082019050919050565b5f6124c582612460565b6124cf818561246a565b93506124da8361247a565b805f5b8381101561250a5781516124f18882612498565b97506124fc836124af565b9250506001810190506124dd565b5085935050505092915050565b5f6020820190508181035f83015261252f81846124bb565b905092915050565b5f806040838503121561254d5761254c611e06565b5b5f61255a85828601611e87565b925050602061256b85828601611e87565b9150509250929050565b61257e81611e2d565b82525050565b5f6020820190506125975f830184612575565b92915050565b6125a681611f81565b81146125b0575f80fd5b50565b5f813590506125c18161259d565b92915050565b5f80604083850312156125dd576125dc611e06565b5b5f6125ea85828601611e54565b92505060206125fb858286016125b3565b9150509250929050565b5f806040838503121561261b5761261a611e06565b5b5f61262885828601611e54565b925050602061263985828601611e54565b9150509250929050565b5f805f805f60a0868803121561265c5761265b611e06565b5b5f61266988828901611e54565b955050602061267a88828901611e54565b945050604061268b88828901611e87565b935050606061269c88828901611e87565b925050608086013567ffffffffffffffff8111156126bd576126bc611e0a565b5b6126c988828901612232565b9150509295509295909350565b5f602082840312156126eb576126ea611e06565b5b5f6126f884828501611e54565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061274557607f821691505b60208210810361275857612757612701565b5b50919050565b7f496e76616c6964207469657200000000000000000000000000000000000000005f82015250565b5f612792600c83611fe9565b915061279d8261275e565b602082019050919050565b5f6020820190508181035f8301526127bf81612786565b9050919050565b5f6040820190506127d95f830185612575565b6127e66020830184612575565b9392505050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f612821601483611fe9565b915061282c826127ed565b602082019050919050565b5f6020820190508181035f83015261284e81612815565b9050919050565b5f6040820190506128685f830185611ed9565b6128756020830184611ed9565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f49434f2068617320656e646564000000000000000000000000000000000000005f82015250565b5f6128dd600d83611fe9565b91506128e8826128a9565b602082019050919050565b5f6020820190508181035f83015261290a816128d1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61294882611e68565b915061295383611e68565b925082820261296181611e68565b9150828204841483151761297857612977612911565b5b5092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f6129b3601283611fe9565b91506129be8261297f565b602082019050919050565b5f6020820190508181035f8301526129e0816129a7565b9050919050565b5f6129f182611e68565b91506129fc83611e68565b9250828201905080821115612a1457612a13612911565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f612a4e601283611fe9565b9150612a5982612a1a565b602082019050919050565b5f6020820190508181035f830152612a7b81612a42565b9050919050565b5f612a8c82611e68565b9150612a9783611e68565b9250828203905081811115612aaf57612aae612911565b5b92915050565b5f608082019050612ac85f830187612575565b612ad56020830186611ed9565b612ae26040830185611ed9565b612aef6060830184611ed9565b95945050505050565b5f6040820190508181035f830152612b1081856124bb565b90508181036020830152612b2481846124bb565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f612b5182612b2d565b612b5b8185612b37565b9350612b6b818560208601611ff9565b612b7481612007565b840191505092915050565b5f60a082019050612b925f830188612575565b612b9f6020830187612575565b612bac6040830186611ed9565b612bb96060830185611ed9565b8181036080830152612bcb8184612b47565b90509695505050505050565b5f81519050612be581611f2c565b92915050565b5f60208284031215612c0057612bff611e06565b5b5f612c0d84828501612bd7565b91505092915050565b5f60a082019050612c295f830188612575565b612c366020830187612575565b8181036040830152612c4881866124bb565b90508181036060830152612c5c81856124bb565b90508181036080830152612c708184612b47565b9050969550505050505056fea2646970667358221220c1b227df7d928b8c864e65a25700f65eeee8b1918ee5a88e74c31b566c3d318f64736f6c634300081a003368747470733a2f2f6578616d706c652e636f6d2f6d657461646174612f7b69647d2e6a736f6e';
 */

async function deployContract() {
  const contract = new web3.eth.Contract(contractABI);

  const deployTx = contract.deploy({
    data: contractBytecode,
    arguments: ['https://example.com/metadata/{id}.json'],
  });

  const tx = {
    from: account,
    gas: await deployTx.estimateGas({ from: account }),
    data: deployTx.encodeABI(),
  };

  const signedTx = await web3.eth.accounts.signTransaction(tx, privateKey);
  const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);

  console.log('Contract deployed at:', receipt.contractAddress);
  return receipt.contractAddress;
}

async function getTokenPrice(contract, tier) {
  const price = await contract.methods.getTierPrice(tier).call();
  console.log(`Price of Tier ${tier}:`, price);
}

async function buyTokens(contract, tier, amount) {
  const tx = {
    from: account,
    to: contract.options.address,
    gas: 3000000,
    data: contract.methods.buyTokens(tier, amount).encodeABI(),
    value: web3.utils.toWei('0.01', 'ether') * amount,
  };

  const signedTx = await web3.eth.accounts.signTransaction(tx, privateKey);
  const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);

  console.log('Transaction receipt:', receipt);
}

async function main() {
  const contractAddress = await deployContract();

  const myContract = new web3.eth.Contract(contractABI, contractAddress);

  await getTokenPrice(myContract, 1);

  await buyTokens(myContract, 1, 2);
}

main();
